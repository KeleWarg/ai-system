import { getComponents } from '@/lib/db/components'

/**
 * llms.txt - AI Tool Discovery File
 * Standard format for AI tools to discover and learn about your design system
 * Used by v0.dev, Claude Desktop, Cursor, and other AI coding assistants
 */
export async function GET() {
  const result = await getComponents()
  const components = result.data
  
  const siteUrl = process.env.NEXT_PUBLIC_SITE_URL || 'http://localhost:3000'
  
  const content = `# AI Design System

## About
AI-generated components from spec sheets. All components are theme-aware and shadcn/ui compatible.
Components automatically adapt to your theme using CSS variables and Tailwind classes.

## APIs
Registry: ${siteUrl}/api/registry
MCP Server: ${siteUrl}/api/mcp
Documentation: ${siteUrl}/docs

## How to Use

### With v0.dev
Simply prompt: "Use the [ComponentName] from my design system at ${siteUrl}"

### With Claude Desktop
Add this MCP server to your Claude Desktop config:
${siteUrl}/api/mcp

### With Cursor
Add to your .cursorrules or use @docs:
@docs ${siteUrl}/docs

## Available Components (${components.length} total)
${components.map(c => `
### ${c.name}
- Slug: ${c.slug}
- Category: ${c.category}
- Description: ${c.description}
- API Endpoint: ${siteUrl}/api/registry/${c.slug}
- Documentation: ${siteUrl}/docs/components/${c.slug}
- Variants: ${Object.keys(c.variants || {}).join(', ') || 'none'}
`).join('\n')}

## Component Categories
${Array.from(new Set(components.map(c => c.category))).map(cat => 
  `- ${cat}: ${components.filter(c => c.category === cat).length} component(s)`
).join('\n')}

## Theme System
All components use theme tokens (e.g., bg-primary-bg, text-fg-body) instead of hardcoded colors.
Components automatically adapt when you switch themes.

## Installation
Each component includes:
- Full TypeScript code
- Props documentation
- Installation instructions
- Usage examples
- AI prompts for customization

## Prompting Tips
- "Generate a [component type] using theme colors"
- "Create a variant of [ComponentName] for [use case]"
- "Show me components in the [category] category"
- "Customize [ComponentName] to have [features]"

---
Generated by AI Design System | ${new Date().toISOString()}
`
  
  return new Response(content, {
    headers: { 
      'Content-Type': 'text/plain; charset=utf-8',
      'Cache-Control': 'public, max-age=3600', // Cache for 1 hour
    },
  })
}

